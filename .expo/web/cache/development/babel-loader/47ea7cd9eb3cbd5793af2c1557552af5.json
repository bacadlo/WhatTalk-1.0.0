{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Logo = _interopRequireDefault(require(\"./../../../assets/imgs/Logo.png\"));\n\nvar _CustomInput = _interopRequireDefault(require(\"../../components/CustomInput\"));\n\nvar _CustomButton = _interopRequireDefault(require(\"../../components/CustomButton\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _expoStatusBar = require(\"expo-status-bar\");\n\nvar _firebaseConfig = require(\"../../../firebase/firebase-config\");\n\nvar _googleSignin = require(\"@react-native-community/google-signin\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Edwin\\\\Documents\\\\GitHub\\\\Whattalk\\\\whattalk\\\\scr\\\\screens\\\\SignInScreen\\\\SignInScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SignInScreen = function SignInScreen() {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = (0, _react.useState)({}),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var navigation = (0, _native.useNavigation)();\n  (0, _react.useEffect)(function () {\n    _googleSignin.GoogleSignin.configure({\n      webClientId: '599020079103-2qnisn4lq1dh9c1o0aahsc53then4cbk.apps.googleusercontent.com',\n      offlineAccess: true,\n      forceCodeForRefreshToken: true\n    });\n  }, []);\n\n  var onGoogleSignInPressed = function _callee() {\n    var userInfo;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_googleSignin.GoogleSignin.hasPlayServices());\n\n          case 3:\n            _context.next = 5;\n            return _regenerator.default.awrap(_googleSignin.GoogleSignin.signIn());\n\n          case 5:\n            userInfo = _context.sent;\n            console.log(userInfo);\n            setUser({\n              userInfo: userInfo\n            });\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (_context.t0.code === _googleSignin.statusCodes.SIGN_IN_CANCELLED) {\n              console.warn('Signin cancelled');\n            } else if (_context.t0.code === _googleSignin.statusCodes.IN_PROGRESS) {\n              console.warn('Signin in progress');\n            } else if (_context.t0.code === _googleSignin.statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\n              console.warn('PLAY_SERVICES_NOT_AVAILABLE');\n            } else {\n              navigation.navigate('Home');\n            }\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var onSignInPressed = function onSignInPressed() {\n    console.warn(\"SignIn\");\n    (0, _firebaseConfig.signIn)(email, password);\n    navigation.navigate('Home');\n  };\n\n  var onForgotPasswordPressed = function onForgotPasswordPressed() {\n    console.warn('Forgot Password pressed');\n  };\n\n  var onSignupPressed = function onSignupPressed() {\n    console.warn('Sign Up pressed');\n    (0, _firebaseConfig.signIn)(email, password);\n    navigation.navigate('SignUp');\n  };\n\n  var _useWindowDimensions = (0, _reactNative.useWindowDimensions)(),\n      height = _useWindowDimensions.height;\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_expoStatusBar.StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"SignInScreen\"), _react.default.createElement(_reactNative.Image, {\n    source: _Logo.default,\n    style: [styles.logo, {\n      height: height * 0.4\n    }],\n    resizeMode: \"contain\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_CustomInput.default, {\n    placeholder: \"Email\",\n    value: email,\n    setValue: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_CustomInput.default, {\n    placeholder: \"Password\",\n    value: password,\n    setValue: setPassword,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_CustomButton.default, {\n    text: \"Sign In\",\n    onPress: onSignInPressed,\n    type: \"SIGNIN\",\n    disabled: !password || !email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_CustomButton.default, {\n    text: \"Forgot Password?\",\n    onPress: onForgotPasswordPressed,\n    type: \"FORGOTPASSWORD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_googleSignin.GoogleSigninButton, {\n    style: {\n      width: 300,\n      height: 55\n    },\n    onPress: onGoogleSignInPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_CustomButton.default, {\n    text: \"Sign Up \",\n    onPress: onSignupPressed,\n    type: \"SIGNIN\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _default = SignInScreen;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  root: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    pagging: 20\n  },\n  logo: {\n    width: '70%',\n    maxWidth: 300,\n    maxHeight: 300\n  }\n});","map":{"version":3,"sources":["C:/Users/Edwin/Documents/GitHub/Whattalk/whattalk/scr/screens/SignInScreen/SignInScreen.js"],"names":["SignInScreen","email","setEmail","password","setPassword","user","setUser","navigation","GoogleSignin","configure","webClientId","offlineAccess","forceCodeForRefreshToken","onGoogleSignInPressed","hasPlayServices","signIn","userInfo","console","log","code","statusCodes","SIGN_IN_CANCELLED","warn","IN_PROGRESS","PLAY_SERVICES_NOT_AVAILABLE","navigate","onSignInPressed","onForgotPasswordPressed","onSignupPressed","height","styles","root","Logo","logo","width","StyleSheet","create","backgroundColor","alignItems","pagging","maxWidth","maxHeight"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Image, useWindowDimensions } from 'react-native';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Logo from './../../../assets/imgs/Logo.png'\r\nimport CustomInput from '../../components/CustomInput';\r\nimport CustomButton from '../../components/CustomButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { signIn, signUp } from '../../../firebase/firebase-config'\r\nimport {\r\n  GoogleSignin,\r\n  GoogleSigninButton,\r\n  statusCodes,\r\n} from '@react-native-community/google-signin';\r\n\r\nconst SignInScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState({});\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    GoogleSignin.configure({\r\n      webClientId:\r\n        '599020079103-2qnisn4lq1dh9c1o0aahsc53then4cbk.apps.googleusercontent.com',\r\n      offlineAccess: true,\r\n      forceCodeForRefreshToken: true,\r\n    });\r\n  }, [])\r\n\r\n  const onGoogleSignInPressed = async () => {\r\n    try {\r\n        await GoogleSignin.hasPlayServices();\r\n        const userInfo = await GoogleSignin.signIn();\r\n        console.log ( userInfo)\r\n        setUser({ userInfo });\r\n      } catch (error) {\r\n        if (error.code === statusCodes.SIGN_IN_CANCELLED) {\r\n          // user cancelled the login flow\r\n          console.warn('Signin cancelled');\r\n        } else if (error.code === statusCodes.IN_PROGRESS) {\r\n          // operation (e.g. sign in) is in progress already\r\n          console.warn('Signin in progress');\r\n        } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\r\n          // play services not available or outdated\r\n          console.warn('PLAY_SERVICES_NOT_AVAILABLE');\r\n        } else {\r\n          // some other error happened\r\n          navigation.navigate('Home');\r\n        }\r\n      }  \r\n        \r\n    };\r\n\r\n  const onSignInPressed = () =>{\r\n    console.warn(\"SignIn\");\r\n    signIn(email, password);\r\n    navigation.navigate('Home');\r\n  }\r\n  const onForgotPasswordPressed = () => {\r\n    console.warn('Forgot Password pressed');\r\n  };\r\n  const onSignupPressed = () => {\r\n    console.warn('Sign Up pressed');\r\n    signIn(email, password);\r\n    navigation.navigate('SignUp');\r\n  };\r\n  const{height} = useWindowDimensions();\r\n  \r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <StatusBar style=\"auto\" />\r\n      <Text>SignInScreen</Text>\r\n      <Image\r\n        source={Logo}\r\n        style={[styles.logo, {height: height * 0.4}]}\r\n        resizeMode=\"contain\"\r\n      />\r\n\r\n      <CustomInput placeholder=\"Email\" value={email} setValue={setEmail} />\r\n      <CustomInput\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        setValue={setPassword}\r\n        secureTextEntry={true}\r\n      />\r\n      <CustomButton text=\"Sign In\" onPress={onSignInPressed} type=\"SIGNIN\" disabled={!password || !email}/>\r\n      <CustomButton\r\n        text=\"Forgot Password?\"\r\n        onPress={onForgotPasswordPressed}\r\n        type=\"FORGOTPASSWORD\"\r\n        \r\n      />\r\n      <GoogleSigninButton\r\n        style={{width: 300, height: 55}}\r\n        onPress={onGoogleSignInPressed}\r\n      />\r\n      <CustomButton text=\"Sign Up \" onPress={onSignupPressed} type=\"SIGNIN\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default SignInScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  root:{\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    pagging: 20,\r\n  },\r\n  logo:{\r\n    width: '70%',\r\n    maxWidth: 300,\r\n    maxHeight:300,\r\n  },\r\n})\r\n"]},"metadata":{},"sourceType":"script"}