{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleSigninButton = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\Edwin\\\\Documents\\\\GitHub\\\\Whattalk\\\\whattalk\\\\node_modules\\\\@react-native-community\\\\google-signin\\\\src\\\\GoogleSigninButton.js\";\nvar _excluded = [\"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RNGoogleSignin = _reactNative.NativeModules.RNGoogleSignin;\nvar RNGoogleSigninButton = (0, _reactNative.requireNativeComponent)('RNGoogleSigninButton', null);\n\nvar GoogleSigninButton = function (_PureComponent) {\n  (0, _inherits2.default)(GoogleSigninButton, _PureComponent);\n\n  var _super = _createSuper(GoogleSigninButton);\n\n  function GoogleSigninButton() {\n    (0, _classCallCheck2.default)(this, GoogleSigninButton);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(GoogleSigninButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      if (_reactNative.Platform.OS === 'android') {\n        this._clickListener = _reactNative.DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', function () {\n          _this.props.onPress && _this.props.onPress();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._clickListener && this._clickListener.remove();\n    }\n  }, {\n    key: \"getRecommendedSize\",\n    value: function getRecommendedSize() {\n      switch (this.props.size) {\n        case RNGoogleSignin.BUTTON_SIZE_ICON:\n          return styles.iconSize;\n\n        case RNGoogleSignin.BUTTON_SIZE_WIDE:\n          return styles.wideSize;\n\n        default:\n          return styles.standardSize;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n      return _react.default.createElement(RNGoogleSigninButton, (0, _extends2.default)({\n        style: [this.getRecommendedSize(), style]\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n  return GoogleSigninButton;\n}(_react.PureComponent);\n\nexports.GoogleSigninButton = GoogleSigninButton;\nGoogleSigninButton.propTypes = (0, _extends2.default)({}, _reactNative.ViewPropTypes, {\n  size: _propTypes.default.number,\n  color: _propTypes.default.number,\n  disabled: _propTypes.default.bool,\n  onPress: _propTypes.default.func.isRequired\n});\nGoogleSigninButton.defaultProps = {\n  size: RNGoogleSignin.BUTTON_SIZE_STANDARD\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48\n  },\n  standardSize: {\n    width: 212,\n    height: 48\n  },\n  wideSize: {\n    width: 312,\n    height: 48\n  }\n});\n\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE\n};\nGoogleSigninButton.Color = {\n  Auto: RNGoogleSignin.BUTTON_COLOR_AUTO,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK\n};","map":{"version":3,"sources":["C:/Users/Edwin/Documents/GitHub/Whattalk/whattalk/node_modules/@react-native-community/google-signin/src/GoogleSigninButton.js"],"names":["RNGoogleSignin","NativeModules","RNGoogleSigninButton","GoogleSigninButton","Platform","OS","_clickListener","DeviceEventEmitter","addListener","props","onPress","remove","size","BUTTON_SIZE_ICON","styles","iconSize","BUTTON_SIZE_WIDE","wideSize","standardSize","style","getRecommendedSize","PureComponent","propTypes","ViewPropTypes","PropTypes","number","color","disabled","bool","func","isRequired","defaultProps","BUTTON_SIZE_STANDARD","StyleSheet","create","width","height","Size","Icon","Standard","Wide","Color","Auto","BUTTON_COLOR_AUTO","Light","BUTTON_COLOR_LIGHT","Dark","BUTTON_COLOR_DARK"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;AASA,IAAQA,cAAR,GAA2BC,0BAA3B,CAAQD,cAAR;AACA,IAAME,oBAAoB,GAAG,yCAAuB,sBAAvB,EAA+C,IAA/C,CAA7B;;IAEaC,kB;;;;;;;;;;;;WAaX,6BAAoB;AAAA;;AAClB,UAAIC,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,aAAKC,cAAL,GAAsBC,gCAAmBC,WAAnB,CAA+B,6BAA/B,EAA8D,YAAM;AACxF,UAAA,KAAI,CAACC,KAAL,CAAWC,OAAX,IAAsB,KAAI,CAACD,KAAL,CAAWC,OAAX,EAAtB;AACD,SAFqB,CAAtB;AAGD;AACF;;;WAED,gCAAuB;AACrB,WAAKJ,cAAL,IAAuB,KAAKA,cAAL,CAAoBK,MAApB,EAAvB;AACD;;;WAED,8BAAqB;AACnB,cAAQ,KAAKF,KAAL,CAAWG,IAAnB;AACE,aAAKZ,cAAc,CAACa,gBAApB;AACE,iBAAOC,MAAM,CAACC,QAAd;;AACF,aAAKf,cAAc,CAACgB,gBAApB;AACE,iBAAOF,MAAM,CAACG,QAAd;;AACF;AACE,iBAAOH,MAAM,CAACI,YAAd;AANJ;AAQD;;;WAED,kBAAS;AACP,wBAA4B,KAAKT,KAAjC;AAAA,UAAQU,KAAR,eAAQA,KAAR;AAAA,UAAkBV,KAAlB;AAEA,aAAO,6BAAC,oBAAD;AAAsB,QAAA,KAAK,EAAE,CAAC,KAAKW,kBAAL,EAAD,EAA4BD,KAA5B;AAA7B,SAAqEV,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;EAxCqCY,oB;;;AAA3BlB,kB,CACJmB,S,8BACFC,0B;AACHX,EAAAA,IAAI,EAAEY,mBAAUC,M;AAChBC,EAAAA,KAAK,EAAEF,mBAAUC,M;AACjBE,EAAAA,QAAQ,EAAEH,mBAAUI,I;AACpBlB,EAAAA,OAAO,EAAEc,mBAAUK,IAAV,CAAeC;;AANf3B,kB,CASJ4B,Y,GAAe;AACpBnB,EAAAA,IAAI,EAAEZ,cAAc,CAACgC;AADD,C;;AAkCxB,IAAMlB,MAAM,GAAGmB,wBAAWC,MAAX,CAAkB;AAC/BnB,EAAAA,QAAQ,EAAE;AACRoB,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GADqB;AAK/BlB,EAAAA,YAAY,EAAE;AAAEiB,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GALiB;AAM/BnB,EAAAA,QAAQ,EAAE;AAAEkB,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB;AANqB,CAAlB,CAAf;;AASAjC,kBAAkB,CAACkC,IAAnB,GAA0B;AACxBC,EAAAA,IAAI,EAAEtC,cAAc,CAACa,gBADG;AAExB0B,EAAAA,QAAQ,EAAEvC,cAAc,CAACgC,oBAFD;AAGxBQ,EAAAA,IAAI,EAAExC,cAAc,CAACgB;AAHG,CAA1B;AAMAb,kBAAkB,CAACsC,KAAnB,GAA2B;AACzBC,EAAAA,IAAI,EAAE1C,cAAc,CAAC2C,iBADI;AAEzBC,EAAAA,KAAK,EAAE5C,cAAc,CAAC6C,kBAFG;AAGzBC,EAAAA,IAAI,EAAE9C,cAAc,CAAC+C;AAHI,CAA3B","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  NativeModules,\n  requireNativeComponent,\n  ViewPropTypes,\n  Platform,\n  DeviceEventEmitter,\n  StyleSheet,\n} from 'react-native';\n\nconst { RNGoogleSignin } = NativeModules;\nconst RNGoogleSigninButton = requireNativeComponent('RNGoogleSigninButton', null);\n\nexport class GoogleSigninButton extends PureComponent {\n  static propTypes = {\n    ...ViewPropTypes,\n    size: PropTypes.number,\n    color: PropTypes.number,\n    disabled: PropTypes.bool,\n    onPress: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    size: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'android') {\n      this._clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {\n        this.props.onPress && this.props.onPress();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._clickListener && this._clickListener.remove();\n  }\n\n  getRecommendedSize() {\n    switch (this.props.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  }\n\n  render() {\n    const { style, ...props } = this.props;\n\n    return <RNGoogleSigninButton style={[this.getRecommendedSize(), style]} {...props} />;\n  }\n}\n\nconst styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48,\n  },\n  standardSize: { width: 212, height: 48 },\n  wideSize: { width: 312, height: 48 },\n});\n\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE,\n};\n\nGoogleSigninButton.Color = {\n  Auto: RNGoogleSignin.BUTTON_COLOR_AUTO,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n};\n"]},"metadata":{},"sourceType":"script"}