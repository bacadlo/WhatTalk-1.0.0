{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Edwin\\\\Documents\\\\GitHub\\\\Whattalk\\\\whattalk\\\\scr\\\\components\\\\CustomButton\\\\CustomButton.js\";\n\nvar CustomButton = function CustomButton(_ref) {\n  var onPress = _ref.onPress,\n      text = _ref.text,\n      type = _ref.type;\n  var containerKey = \"container_\" + type;\n  var textKey = \"text_\" + type;\n  return _react.default.createElement(_reactNative.Pressable, {\n    onPress: onPress,\n    style: [styles.container, styles[containerKey]],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [styles.text, styles[textKey]],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, text));\n};\n\nvar _default = CustomButton;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    width: '80%',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginVertical: 10,\n    padding: 15,\n    alignItems: 'center'\n  },\n  container_SIGNIN: {\n    backgroundColor: '#41de3e'\n  },\n  container_FORGOTPASSWORD: {},\n  container_GOOGLESIGNIN: {\n    backgroundColor: '#dedede'\n  },\n  container_SIGNUP: {\n    backgroundColor: '#41de3e'\n  },\n  container_CREATEACCOUNT: {\n    backgroundColor: '#41de3e'\n  },\n  text: {\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  text_FORGOTPASSWORD: {\n    fontStyle: 'italic',\n    color: '#41de3e',\n    textAlign: 'right'\n  },\n  text_GOOGLESIGNIN: {\n    fontWeight: 'bold',\n    color: 'blue'\n  },\n  text_SIGNUP: {\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/Edwin/Documents/GitHub/Whattalk/whattalk/scr/components/CustomButton/CustomButton.js"],"names":["CustomButton","onPress","text","type","containerKey","textKey","styles","container","StyleSheet","create","width","borderRadius","paddingHorizontal","marginVertical","padding","alignItems","container_SIGNIN","backgroundColor","container_FORGOTPASSWORD","container_GOOGLESIGNIN","container_SIGNUP","container_CREATEACCOUNT","fontWeight","color","text_FORGOTPASSWORD","fontStyle","textAlign","text_GOOGLESIGNIN","text_SIGNUP"],"mappings":";;;;;;;AAAA;;AACA;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAA2B;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC5C,MAAMC,YAAY,kBAAgBD,IAAlC;AACA,MAAME,OAAO,aAAWF,IAAxB;AACF,SACE,6BAAC,sBAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,KAAK,EAAE,CAACK,MAAM,CAACC,SAAR,EAAmBD,MAAM,CAACF,YAAD,CAAzB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACE,MAAM,CAACJ,IAAR,EAAcI,MAAM,CAACD,OAAD,CAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CH,IAA9C,CAHF,CADF;AAOD,CAVD;;eAYeF,Y;;;AAEf,IAAMM,MAAM,GAAGE,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,KAAK,EAAE,KADE;AAETC,IAAAA,YAAY,EAAE,CAFL;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,cAAc,EAAE,EAJP;AAKTC,IAAAA,OAAO,EAAE,EALA;AAMTC,IAAAA,UAAU,EAAE;AANH,GADoB;AAS/BC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,eAAe,EAAE;AADD,GATa;AAY/BC,EAAAA,wBAAwB,EAAE,EAZK;AAa/BC,EAAAA,sBAAsB,EAAE;AACtBF,IAAAA,eAAe,EAAE;AADK,GAbO;AAgB/BG,EAAAA,gBAAgB,EAAE;AAChBH,IAAAA,eAAe,EAAE;AADD,GAhBa;AAmB/BI,EAAAA,uBAAuB,EAAE;AACvBJ,IAAAA,eAAe,EAAE;AADM,GAnBM;AAsB/Bf,EAAAA,IAAI,EAAE;AACJoB,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAtByB;AA0B/BC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,SAAS,EAAE,QADQ;AAEnBF,IAAAA,KAAK,EAAE,SAFY;AAGnBG,IAAAA,SAAS,EAAE;AAHQ,GA1BU;AA+B/BC,EAAAA,iBAAiB,EAAE;AACjBL,IAAAA,UAAU,EAAE,MADK;AAEjBC,IAAAA,KAAK,EAAE;AAFU,GA/BY;AAmC/BK,EAAAA,WAAW,EAAE;AACXN,IAAAA,UAAU,EAAE,MADD;AAEXC,IAAAA,KAAK,EAAE;AAFI;AAnCkB,CAAlB,CAAf","sourcesContent":["import {Text, StyleSheet, View, Pressable} from 'react-native';\r\nimport React from 'react';\r\n\r\nconst CustomButton = ({onPress, text, type}) => {\r\n    const containerKey = `container_${type}`;\r\n    const textKey = `text_${type}`;\r\n  return (\r\n    <Pressable\r\n      onPress={onPress}\r\n      style={[styles.container, styles[containerKey]]}>\r\n      <Text style={[styles.text, styles[textKey]]}>{text}</Text>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '80%',\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n    marginVertical: 10,\r\n    padding: 15,\r\n    alignItems: 'center',\r\n  },\r\n  container_SIGNIN: {\r\n    backgroundColor: '#41de3e',\r\n  },\r\n  container_FORGOTPASSWORD: {},\r\n  container_GOOGLESIGNIN: {\r\n    backgroundColor: '#dedede',\r\n  },\r\n  container_SIGNUP: {\r\n    backgroundColor: '#41de3e',\r\n  },\r\n  container_CREATEACCOUNT: {\r\n    backgroundColor: '#41de3e',\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  text_FORGOTPASSWORD: {\r\n    fontStyle: 'italic',\r\n    color: '#41de3e',\r\n    textAlign: 'right',\r\n  },\r\n  text_GOOGLESIGNIN: {\r\n    fontWeight: 'bold',\r\n    color: 'blue',\r\n  },\r\n  text_SIGNUP: {\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}